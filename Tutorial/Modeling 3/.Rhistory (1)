knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(modelr)       #Helpful Functions in Modeling
library(xtable)
DATA=read_csv("AirWaterTemp.csv",col_types=cols()) #River Data
head(DATA)
ggplot(data=DATA) +
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
WAPLOT.func=function(Location){
DATA %>% filter(L == Location) %>%
ggplot()+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT.func(103)
WAPLOT.func(105)
WAPLOT.func(918)
set.seed(216)
TEST.LOCATIONS=sample(x=unique(DATA$L),size=3,replace=F)
TRAIN = anti_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
TEST = semi_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
WAPLOT2.func=function(DATA){
ggplot(data=DATA)+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT2.func(TRAIN)
WAPLOT2.func(TEST)
linmod=lm(W~A,data=TRAIN)
summary(linmod)
TRAIN2 = TRAIN %>% add_predictions(linmod,var="linpred")
TEST2 = TEST %>% add_predictions(linmod,var="linpred")
TRAIN3 = TRAIN2 %>% add_residuals(linmod,var="linres")
TEST3 = TEST2 %>% add_residuals(linmod,var="linres")
poly2mod=lm(W~A+I(A^2),data=TRAIN)
poly3mod=lm(W~A+I(A^2)+I(A^3),data=TRAIN)
poly4mod=lm(W~A+I(A^2)+I(A^3)+I(A^4),data=TRAIN)
anova(linmod,poly2mod,poly3mod,poly4mod,test="Chisq")
TRAIN4 =TRAIN3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TEST4 =TEST3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TRAIN5 =TRAIN4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
TEST5 =TEST4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
set.seed(INTEGER)
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+12/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+12/(1+exp(4-0.2*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+12/(1+exp(4-0.5*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+12/(1+exp(4+0.5*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+12/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(modelr)       #Helpful Functions in Modeling
library(xtable)
DATA=read_csv("AirWaterTemp.csv",col_types=cols()) #River Data
head(DATA)
ggplot(data=DATA) +
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
WAPLOT.func=function(Location){
DATA %>% filter(L == Location) %>%
ggplot()+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT.func(103)
WAPLOT.func(105)
WAPLOT.func(918)
set.seed(216)
TEST.LOCATIONS=sample(x=unique(DATA$L),size=3,replace=F)
TRAIN = anti_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
TEST = semi_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
WAPLOT2.func=function(DATA){
ggplot(data=DATA)+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT2.func(TRAIN)
WAPLOT2.func(TEST)
linmod=lm(W~A,data=TRAIN)
summary(linmod)
TRAIN2 = TRAIN %>% add_predictions(linmod,var="linpred")
TEST2 = TEST %>% add_predictions(linmod,var="linpred")
TRAIN3 = TRAIN2 %>% add_residuals(linmod,var="linres")
TEST3 = TEST2 %>% add_residuals(linmod,var="linres")
poly2mod=lm(W~A+I(A^2),data=TRAIN)
poly3mod=lm(W~A+I(A^2)+I(A^3),data=TRAIN)
poly4mod=lm(W~A+I(A^2)+I(A^3)+I(A^4),data=TRAIN)
anova(linmod,poly2mod,poly3mod,poly4mod,test="Chisq")
TRAIN4 =TRAIN3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TEST4 =TEST3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TRAIN5 =TRAIN4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
TEST5 =TEST4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+12/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=5+12/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+12/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+8/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+15/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+1/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+15/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+15/(1+exp(10-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+15/(1+exp(4-0.05*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+15/(1+exp(4-0.5*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+15/(1+exp(4+5*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
set.seed(216)
EXAMPLE=tibble(
x=rnorm(10000,mean=0,sd=5),
y=7+15/(1+exp(4-1*x))
)
ggplot(data=EXAMPLE) +
geom_point(aes(x=x,y=y)) +
theme_minimal()
logistic.mod=optim(
par=c(min(TRAIN$W,na.rm=T),
max(TRAIN$W,na.rm=T)-min(TRAIN$W,na.rm=T),
median(TRAIN$A,na.rm=T),
1),           #Smart Starting Values
fn=MSE.logistic,    #Function to Minimize
DATA=TRAIN          #Required Argument
)
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(modelr)       #Helpful Functions in Modeling
library(xtable)
DATA=read_csv("AirWaterTemp.csv",col_types=cols()) #River Data
head(DATA)
ggplot(data=DATA) +
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
WAPLOT.func=function(Location){
DATA %>% filter(L == Location) %>%
ggplot()+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT.func(103)
WAPLOT.func(105)
WAPLOT.func(918)
set.seed(216)
TEST.LOCATIONS=sample(x=unique(DATA$L),size=3,replace=F)
TRAIN = anti_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
TEST = semi_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
WAPLOT2.func=function(DATA){
ggplot(data=DATA)+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT2.func(TRAIN)
WAPLOT2.func(TEST)
linmod=lm(W~A,data=TRAIN)
summary(linmod)
TRAIN2 = TRAIN %>% add_predictions(linmod,var="linpred")
TEST2 = TEST %>% add_predictions(linmod,var="linpred")
TRAIN3 = TRAIN2 %>% add_residuals(linmod,var="linres")
TEST3 = TEST2 %>% add_residuals(linmod,var="linres")
poly2mod=lm(W~A+I(A^2),data=TRAIN)
poly3mod=lm(W~A+I(A^2)+I(A^3),data=TRAIN)
poly4mod=lm(W~A+I(A^2)+I(A^3)+I(A^4),data=TRAIN)
anova(linmod,poly2mod,poly3mod,poly4mod,test="Chisq")
TRAIN4 =TRAIN3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TEST4 =TEST3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TRAIN5 =TRAIN4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
TEST5 =TEST4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
logistic.mod=optim(
par=c(min(TRAIN$W,na.rm=T),
max(TRAIN$W,na.rm=T)-min(TRAIN$W,na.rm=T),
median(TRAIN$A,na.rm=T),
1),           #Smart Starting Values
fn=MSE.logistic,    #Function to Minimize
DATA=TRAIN          #Required Argument
)
logistic.mod=optim(
par=c(min(TRAIN$W,na.rm=T),
max(TRAIN$W,na.rm=T)-min(TRAIN$W,na.rm=T),
median(TRAIN$A,na.rm=T),
1),           #Smart Starting Values
fn=MSE.logistic,    #Function to Minimize
DATA=TRAIN          #Required Argument
)
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(modelr)       #Helpful Functions in Modeling
library(xtable)
DATA=read_csv("AirWaterTemp.csv",col_types=cols()) #River Data
head(DATA)
ggplot(data=DATA) +
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
WAPLOT.func=function(Location){
DATA %>% filter(L == Location) %>%
ggplot()+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT.func(103)
WAPLOT.func(105)
WAPLOT.func(918)
set.seed(216)
TEST.LOCATIONS=sample(x=unique(DATA$L),size=3,replace=F)
TRAIN = anti_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
TEST = semi_join(DATA,tibble(L=TEST.LOCATIONS),by="L")
WAPLOT2.func=function(DATA){
ggplot(data=DATA)+
geom_point(aes(x=A,y=W),alpha=0.3)+
geom_smooth(aes(x=A,y=W)) +
theme_minimal()
}
WAPLOT2.func(TRAIN)
WAPLOT2.func(TEST)
linmod=lm(W~A,data=TRAIN)
summary(linmod)
TRAIN2 = TRAIN %>% add_predictions(linmod,var="linpred")
TEST2 = TEST %>% add_predictions(linmod,var="linpred")
TRAIN3 = TRAIN2 %>% add_residuals(linmod,var="linres")
TEST3 = TEST2 %>% add_residuals(linmod,var="linres")
poly2mod=lm(W~A+I(A^2),data=TRAIN)
poly3mod=lm(W~A+I(A^2)+I(A^3),data=TRAIN)
poly4mod=lm(W~A+I(A^2)+I(A^3)+I(A^4),data=TRAIN)
anova(linmod,poly2mod,poly3mod,poly4mod,test="Chisq")
TRAIN4 =TRAIN3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TEST4 =TEST3 %>%
add_predictions(poly2mod,var="poly2pred") %>%
add_predictions(poly3mod,var="poly3pred") %>%
add_predictions(poly4mod,var="poly4pred")
TRAIN5 =TRAIN4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
TEST5 =TEST4 %>%
add_residuals(poly2mod,var="poly2res") %>%
add_residuals(poly3mod,var="poly3res") %>%
add_residuals(poly4mod,var="poly4res")
logistic.model=function(COEF,DATA){
pred=COEF[1]+COEF[2]/(1+exp(COEF[3]-COEF[4]*DATA$A))
}
MSE.logistic=function(COEF,DATA){
error=DATA$W-logistic.model(DATA=DATA,COEF=COEF)
sq.error=error^2
mse=mean(sq.error,na.rm=T)
return(mse)
}
logistic.model=function(COEF,DATA){
pred=COEF[1]+COEF[2]/(1+exp(COEF[3]-COEF[4]*DATA$A))
}
MSE.logistic=function(COEF,DATA){
error=DATA$W-logistic.model(DATA=DATA,COEF=COEF)
sq.error=error^2
mse=mean(sq.error,na.rm=T)
return(mse)
}
logistic.mod=optim(
par=c(min(TRAIN$W,na.rm=T),
max(TRAIN$W,na.rm=T)-min(TRAIN$W,na.rm=T),
median(TRAIN$A,na.rm=T),
1),           #Smart Starting Values
fn=MSE.logistic,    #Function to Minimize
DATA=TRAIN          #Required Argument
)
print(logistic.mod)
logistic.mod$par
logistic.model(COEF=logistic.mod$par,DATA=TRAIN5)
logistic.model(COEF=logistic.mod$par,DATA=TRAIN5)
TRAIN6=TRAIN5 %>% mutate(logpred=logistic.model(COEF=logistic.mod$par,DATA=TRAIN5),
logres=W-logpred)
TEST6=TEST5 %>% mutate(logpred=logistic.model(COEF=logistic.mod$par,DATA=TEST5),
logres=W-logpred)
View(TEST6)
MAT=matrix(c(1,1,1,2,2,2,3,3,3),byrow=T)
MAT
MAT=matrix(c(1,1,1,2,2,2,3,3,3),3,3,byrow=T)
MAT
MAT=matrix(c(1,1,1,2,2,2,3,3,3),3,3,byrow=F)
MAT
apply(MAT,1,mean)
apply(MAT,2,mean)
apply(MAT,2,mean,na.rm=T)
