}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n)
} else if(D==3){
sample=rpois(n)
} else if(D==4){
sample=rbeta(n)
} else if(D==5) {
sample=rt(n)
}
mean.sample[k]=mean(sample)
}
plot=ggplot()+geom_histogram(aes(x=mean.sample))
plot
ggplot()+geom_histogram(aes(x=mean.sample))
mean.sample
ggplot()+geom_histogram(aes(x=mean.sample))
CLT = function(n,S,D=c(1,2,3,4,5)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000)
} else if(D==3){
initial=rpois(1000000)
} else if(D==4){
initial=rbeta(1000000)
} else if(D==5) {
initial=rt(1000000)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n)
} else if(D==3){
sample=rpois(n)
} else if(D==4){
sample=rbeta(n)
} else if(D==5) {
sample=rt(n)
}
mean.sample[k]=mean(sample)
}
plot=ggplot()+geom_histogram(aes(x=mean.sample),fill=skyblue1)+
theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se)
return(OUT)
}
NORMAL.CLT=CLT(1,1000)
CLT = function(n,S,D=c(1,2)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n)
}
mean.sample[k]=mean(sample)
}
s.mean=mean(mean.sample)
s.se=sd(mean.sample)
plot=ggplot()+
geom_histogram(aes(x=mean.sample),
fill="lightskyblue1")+theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se)
return(OUT)
}
NORMAL.CLT=CLT(1,1000)
NORMAL.CLT=CLT(1,1000)
NORMAL.CLT
NORMAL.CLT=CLT(1,1000,D=2)
CLT = function(n,S,D=c(1,2)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000,1/2,1/2)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n)
}
mean.sample[k]=mean(sample)
}
s.mean=mean(mean.sample)
s.se=sd(mean.sample)
plot=ggplot()+
geom_histogram(aes(x=mean.sample),
fill="lightskyblue1")+theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se)
return(OUT)
}
NORMAL.CLT=CLT(1,1000,D=2)
CLT = function(n,S,D=c(1,2)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000,alpha=1/2,beta=1/2)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n)
}
mean.sample[k]=mean(sample)
}
s.mean=mean(mean.sample)
s.se=sd(mean.sample)
plot=ggplot()+
geom_histogram(aes(x=mean.sample),
fill="lightskyblue1")+theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se)
return(OUT)
}
NORMAL.CLT=CLT(1,1000,D=2)
rgamma?
?rgamma
CLT = function(n,S,D=c(1,2)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000,shape=1/2,rate=1/2)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n)
}
mean.sample[k]=mean(sample)
}
s.mean=mean(mean.sample)
s.se=sd(mean.sample)
plot=ggplot()+
geom_histogram(aes(x=mean.sample),
fill="lightskyblue1")+theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se)
return(OUT)
}
GAMMA.CLT=CLT(1,1000,D=2)
CLT = function(n,S,D=c(1,2)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000,shape=1/2,rate=1/2)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n,shape=0.5,rate=0.5)
}
mean.sample[k]=mean(sample)
}
s.mean=mean(mean.sample)
s.se=sd(mean.sample)
plot=ggplot()+
geom_histogram(aes(x=mean.sample),
fill="lightskyblue1")+theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se)
return(OUT)
}
GAMMA.CLT=CLT(1,1000,D=2)
CLT(1,1000,D=2)$plot
CLT(1,1000,D=2)$plot
CLT(10,1000,D=2)[[1:4]]
CLT(10,1000,D=2)[[1:4]]
CLT(10,1000,D=2)
CLT = function(n,S,D=c(1,2)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000,shape=1/2,rate=1/2)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n,shape=0.5,rate=0.5)
}
mean.sample[k]=mean(sample)
}
s.mean=mean(mean.sample)
s.se=sd(mean.sample)
plot=ggplot()+
geom_histogram(aes(x=mean.sample),
fill="lightskyblue1",bins=40)+theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se,
plot=plot)
return(OUT)
}
CLT(10,1000,D=2)
CLT(10,1000,D=2)$plot
CLT(100,1000,D=2)$plot
CLT(1000,1000,D=2)$plot
CLT(1000,1000,D=2)$plot
CLT(1000,1000,D=2)$plot
CLT(10000,1000,D=2)$plot
CLT(100,1000,D=2)$plot
CLT(10000,1000,D=2)$plot
CLT(100000,1000,D=2)$plot
CLT(1000,1000,D=2)$plot
OUT=CLT(10,1000,D=2)
OUT[[5]]
OUT=CLT(10,1000,D=2)
OUT[[5]]+scale_x_continuous(limits=c(0,12))
geom_vline()
OUT=CLT(10,1000,D=2)
OUT[[5]]+scale_x_continuous(limits=c(0,6))
geom_vline()
OUT=CLT(10,1000,D=2)
OUT[[5]]+scale_x_continuous(limits=c(0,6))+
geom_vline(xintercept=OUT$theory.mean)
OUT[[5]]+scale_x_continuous(limits=c(0,6))+
geom_vline(xintercept=OUT$theory.mean,linetype="dashed")
OUT[[5]]+scale_x_continuous(limits=c(0,6))+
geom_vline(xintercept=OUT$theory.mean,linetype="dashed")+
geom_vline(xintercept=OUT$sim.mean,linetype="dashed")
OUT=CLT(10,1000,D=2)
OUT[[5]]+scale_x_continuous(limits=c(0,6))+
geom_vline(xintercept=OUT$theory.mean,linetype="dashed")
CLT = function(n,S,D=c(1,2)){
if(D==1){
initial=rnorm(1000000)
} else if(D==2){
initial=rgamma(1000000,shape=1/2,rate=1/2)
}
t.mean=mean(initial)
t.se=sd(initial)/sqrt(n)
mean.sample=rep(NA,S)
for(k in 1:S){
if(D==1){
sample=rnorm(n)
} else if(D==2){
sample=rgamma(n,shape=0.5,rate=0.5)
}
mean.sample[k]=mean(sample)
}
s.mean=mean(mean.sample)
s.se=sd(mean.sample)
plot=ggplot()+
geom_histogram(aes(x=mean.sample),
fill="lightskyblue1",bins=40)+
theme_minimal()
OUT=list(theory.mean=t.mean,
theory.se=t.se,
sim.mean=s.mean,
sim.se=s.se,
plot=plot)
return(OUT)
}
CLT(1,1000,D=2)$plot
OUT=CLT(10,1000,D=2)
OUT[[5]]+scale_x_continuous(limits=c(0,6))+
geom_vline(xintercept=OUT$theory.mean,linetype="dashed")
OUT=CLT(100,1000,D=2)$plot
OUT[[5]]+scale_x_continuous(limits=c(0,6))+
geom_vline(xintercept=OUT$theory.mean,linetype="dashed")
View(Ecdat::Bids)
View(Ecdat::Cigar)
View(Ecdat::Electricity)
?Ecdat::Electricity
?Ecdat::terrorism
View(Ecdat::terrorism)
as.factor()
as.factor()
View(forcats::gss_cat)
?forcats::gss_cat
head(forcats::gss_cat)
ttest = function(ob,h0,a){
ts=(mean(ob)-h0)/(sd(ob)/sqrt(n))
pval=2*pt(ts)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
}
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob)-h0)/(sd(ob)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
}
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob)-h0)/(sd(ob)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
return(list(ts=ts,pval=pval,conclusion=conclusion))
}
ttest(ob=forcats::gss_cat$tvhours,h0=4,a=0.05)
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob)-h0)/(sd(ob)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
return(list(ts=ts,pval=pval,conclusion=conclusion))
}
ob=forcats::gss_cat$tvhours
h0=4
a=0.05
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob)-h0)/(sd(ob)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
return(list(ts=ts,pval=pval,conclusion=conclusion))
}
ob=forcats::gss_cat$tvhours
h0=4
a=0.05
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob)-h0)/(sd(ob)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
return(list(ts=ts,pval=pval,conclusion=conclusion))
}
ttest(ob=forcats::gss_cat$tvhours,h0=4,a=0.05)
n=length(ob)
n
ts=(mean(ob)-h0)/(sd(ob)/sqrt(n))
ts
sqrt(n)
(sd(ob)/sqrt(n))
ob=forcats::gss_cat$tvhours
h0=4
a=0.05
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob,na.rm=T)-h0)/(sd(ob,na.rm=T)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
return(list(ts=ts,pval=pval,conclusion=conclusion))
}
ttest(ob=forcats::gss_cat$tvhours,h0=4,a=0.05)
ttest(ob=forcats::gss_cat$tvhours,h0=8,a=0.05)
ttest(ob=forcats::gss_cat$tvhours,h0=2,a=0.05)
ttest(ob=forcats::gss_cat$tvhours,h0=3,a=0.05)
ttest(ob=forcats::gss_cat$tvhours,h0=4,a=0.05)
ttest(ob=forcats::gss_cat$tvhours,h0=3,a=0.05)
ob=forcats::gss_cat$tvhours
h0=4
a=0.05
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob,na.rm=T)-h0)/(sd(ob,na.rm=T)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
plot=ggplot() +
geom_histogram(aes(x=obs),fill="lightskyblue1") +
theme_minimal() + geom_vline(xintercept=h0)
return(list(ts=ts,pval=pval,conclusion=conclusion,plot=plot))
}
ttest(ob=forcats::gss_cat$tvhours,h0=4,a=0.05)
ob=forcats::gss_cat$tvhours
h0=4
a=0.05
ttest = function(ob,h0,a){
n=length(ob)
ts=(mean(ob,na.rm=T)-h0)/(sd(ob,na.rm=T)/sqrt(n))
pval=2*pt(ts,df=n-1)
conclusion = if(pval<a){
"Reject Null Hypothesis"
} else{
"Fail to Reject Null Hypothesis"
}
plot=ggplot() +
geom_histogram(aes(x=ob),fill="lightskyblue1") +
theme_minimal() + geom_vline(xintercept=h0)
return(list(ts=ts,pval=pval,conclusion=conclusion,plot=plot))
}
ttest(ob=forcats::gss_cat$tvhours,h0=4,a=0.05)
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
color=c("blue","red","green")
switch(color2,color)
color2="blue"
switch(color2,color)
switch(color,color2)
switch(color2,color)
switch(2,color)
switch(2,color)
y=switch(2,color)
y=switch(distribution,"Normal"="rnorm()","Gamma"="rgamma()","Exponential"="rexp()")
colors.func = function(x,distribution=c("Normal","Gamma","Exponential"),size=1000){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(1000),"Exponential"=rexp(1000))
return(y)
}
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(1000),"Exponential"=rexp(1000))
return(y)
}
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(size),"Exponential"=rexp(size))
return(y)
}
colors.func(distribution="Gamma",size=50)
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000,...){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(size,shape=),"Exponential"=rexp(size))
return(y)
}
colors.func(distribution="Gamma",size=50,shape=1)
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000,...){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(size,shape=shape),"Exponential"=rexp(size))
return(y)
}
colors.func(distribution="Gamma",size=50,shape=1)
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000,...){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(size,shape=1),"Exponential"=rexp(size))
return(y)
}
colors.func(distribution="Gamma",size=50,shape=1)
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000,...){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(size,shape=shape),"Exponential"=rexp(size))
return(y)
}
colors.func(distribution="Gamma",size=50,shape=1)
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000,...){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(size,shape=v),"Exponential"=rexp(size))
return(y)
}
colors.func(distribution="Gamma",size=50,v=1)
colors.func = function(distribution=c("Normal","Gamma","Exponential"),size=1000){
y=switch(distribution,"Normal"=rnorm(size),"Gamma"=rgamma(size,shape=v),"Exponential"=rexp(size))
return(y)
}
colors.func(distribution="Gamma",size=50,v=1)
